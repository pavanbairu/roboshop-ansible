- name: Load MongoDB Schema
  when: schema_setup == "mongo"
  block:
    - name: Copy MongoDB repo file
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: Install MongoDB Client
      ansible.builtin.yum:
        name: mongodb-org-shell
        state: installed

    - name: Download DocDB PEM File
      ansible.builtin.get_url:
        url: https://truststore.pki.rds.amazonaws.com/us-east-1/us-east-1-bundle.pem
        dest: /app/rds-combined-ca-bundle.pem

    - name: Load Schema
      ansible.builtin.shell: mongo --ssl --host {{ lookup('aws_ssm', '{{ env }}.docdb.db_endpoint', region='us-east-1' ) }}:27017 --sslCAFile /app/rds-combined-ca-bundle.pem --username {{ lookup('aws_ssm', '{{ env }}.docdb.db_user', region='us-east-1' ) }} --password {{ lookup('aws_ssm', '{{ env }}.docdb.db_password', region='us-east-1' ) }} </app/schema/{{component}}.js

- name: Load MySql Schema
  when: schema_setup == "mysql"
  block:
    - name: Copying MySql repo file
      ansible.builtin.copy:
        src: mysql.repo
        dest: /etc/yum.repos.d/mysql.repo

    - name: Install mysql client
      ansible.builtin.yum:
        name: mysql
        state: installed

    - name: Schema Check
      ansible.builtin.shell: mysql -h {{ lookup('aws_ssm', '{{ env }}.rds.mysqldb_host', region='us-east-1' ) }} -u{{
       lookup('aws_ssm', '{{ env }}.rds.db_user', region='us-east-1' ) }} -p{{ lookup('aws_ssm', '{{ env }}.rds.db_password', region='us-east-1' ) }} | grep cities
       ignore_errors: yes
       register: out

    - name: Load MySql Schema
      ansible.builtin.shell: mysql -h {{ lookup('aws_ssm', '{{ env }}.rds.mysqldb_host', region='us-east-1' ) }} -u{{ lookup('aws_ssm', '{{ env }}.rds.db_user', region='us-east-1' ) }} -p{{ lookup('aws_ssm', '{{ env }}.rds.db_password', region='us-east-1' ) }} < /app/schema/{{component}}.sql
      when: out.rc != 0 or force_schema_reload